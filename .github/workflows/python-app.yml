name: Python package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      run: |
        curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Poetry Version
      run: |
        poetry --version
    - name: Poetry Install Dependencies
      run: |
        poetry install --no-interaction
      working-directory: ./backend
    - name: Test with pytest
      run: |
        poetry run pytest --cov .
      working-directory: ./backend
    - name: Lint with flake8
      run: |
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        poetry run flake8 app/ --exclude .venv,app/migrations/versions/ --count --exit-zero --max-complexity=10 --max-line-length=127 --show-source --statistics
      working-directory: ./backend
    - name: Code Check with bandit
      run: |
        poetry run bandit -x ./.venv,./.tox,./tests -r ./
      working-directory: ./backend

  spellchecking:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Check out the code
    - uses: actions/setup-node@v1
      name: Run spell check
      with:
        node-version: "12"
    - run: npm install -g cspell
    - run: cspell --config ./cSpell.json "**/*.py"
